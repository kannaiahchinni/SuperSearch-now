<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope,$location,loaderService) {
	/* widget controller */
	$scope.showTree = false;
	var c = this;
	c.dataJson = $scope.data.dataJson;
	c.noData='notLoaded';
	c.searchStr = '';
	c.init = function() {
		  // init for these samples -- you don't need to call this
			var $ = go.GraphObject.make;  // for conciseness in defining templates
		
		if(typeof myDiagram !== 'undefined')
			myDiagram.div = null;
		myDiagram =
		$(go.Diagram, "myDiagramDiv",  // must name or refer to the DIV HTML element
		{
			// start everything in the middle of the viewport
			initialContentAlignment: go.Spot.Center,
			// have mouse wheel events zoom in and out instead of scroll up and down
			"toolManager.mouseWheelBehavior": go.ToolManager.WheelZoom,
			// enable undo & redo
			"undoManager.isEnabled": true
		});
		
		// define the Node template
		myDiagram.nodeTemplate =
		$(go.Node, "Auto",
		new go.Binding("location", "loc", go.Point.parse).makeTwoWay(go.Point.stringify),
		// define the node's outer shape, which will surround the TextBlock
		$(go.Shape, "RoundedRectangle",
		{
			parameter1: 20,  // the corner has a large radius
			fill: $(go.Brush, "Linear", { 0: "rgb(254, 201, 0)", 1: "rgb(254, 162, 0)" }),
				stroke: null,
				portId: "",  // this Shape is the Node's port, not the whole Node
				fromLinkable: true, fromLinkableSelfNode: true, fromLinkableDuplicates: true,
				toLinkable: true, toLinkableSelfNode: true, toLinkableDuplicates: true,
				cursor: "pointer",
				width:250
			}),
			$(go.TextBlock,
			{
				font: "bold 11pt helvetica, bold arial, sans-serif",
				editable: true,  // editing the text automatically updates the model data
				width:200
			},
			new go.Binding("text").makeTwoWay())
			);
			// unlike the normal selection Adornment, this one includes a Button
			myDiagram.nodeTemplate.selectionAdornmentTemplate =
			$(go.Adornment, "Spot",
			$(go.Panel, "Auto",
			$(go.Shape, { fill: null, stroke: "blue", strokeWidth: 2 }),
				$(go.Placeholder)  // a Placeholder sizes itself to the selected Node
				) // end button
				); // end Adornment
				
				// replace the default Link template in the linkTemplateMap
				myDiagram.linkTemplate =
				$(go.Link,  // the whole link panel
				{
					curve: go.Link.Bezier, adjusting: go.Link.Stretch,
					reshapable: true, relinkableFrom: true, relinkableTo: true,
					toShortLength: 3
				},
				new go.Binding("points").makeTwoWay(),
				new go.Binding("curviness"),
				$(go.Shape,  // the link shape
				{ strokeWidth: 1.5 }),
					$(go.Shape,  // the arrowhead
					{ toArrow: "standard", stroke: null })
						
						);
		console.log(c.dataJson);
		if(c.dataJson){
			myDiagram.model = go.Model.fromJson(c.dataJson);
		}
						
						
						
					};
	
	
				$scope.showRecord = function(node) {
					 console.log($location.host());
					 var url = 'https://'+$location.host()+"/sys_script_include.do?sys_id="+node.sys_id;
					 window.open(url,'_blank');
				};
					c.search = function(e){
						
						if (e && e.keyCode != 13) {
							return;
						}
						console.log(c.searchStr);
						if(c.searchStr==''){
							alert('enter a script include and method name to search');
							return;
						}
						loaderService.showLoader();
						var input ={'searchStr':c.searchStr};
							c.server.get(input).then(function(r){
								c.dataJson = r.data.dataJson;
								c.stackJson = r.data.callStack;
								console.log(JSON.stringify(c.dataJson));
								console.log(c.stackJson);
								if(c.dataJson){
									c.noData = 'loaded';
								}else{
									c.noData = 'noData';
								}
								console.log(c.noData);
								c.init();
								loaderService.removeLoader();
							});
							
						};
						//c.init();
						
					}]]></client_script>
        <controller_as>c</controller_as>
        <css>.center {
	text-align:center;
  color: #293e40;
}
.btn {
    background-color: #f8f8f8;
}
.left {
	text-align: left;
}

.flex-container {
 	display:flex;
  flex-direction:row;
  justify-content:space-around;
  
}
.callStack {
 	 width:30%; 
}
.fow-tree {
 	 width:69%; 
}

.indicator {
 	color:#333; 
}

body {
  margin: 30px;
  font-family: sans-serif;
  }

.search-button {
 	 background-color:#293e40 !important;
   color:#fff;
  	border:1px solid #293e40;
}
.search-box:focus {
 	  border: 1px solid #293e40;
}
.search-box {
 	border:1px solid #293e40; 
}

#fontSizeWrapper { font-size: 16px; }

#fontSize {
  width: 100px;
  font-size: 1em;
  }



.km-overlay{display:block;position:fixed;top:0;left:0;height:100%;width:100%;z-index:100000;background-color:rgba(0,0,0,.5)}.km-modal{box-shadow:0 3px 11px 0 #9E9E9E;height:100px;padding:20px;background:#FFF;border-radius:10px;width:200px}.km-loader{border:10px solid #646464;border-top:10px solid #81B5A1;border-bottom:10px solid #81B5A1;border-radius:50%;width:50px;height:50px;animation:spin 1s linear infinite;}@keyframes spin{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}.km-vertical{left:0;bottom:0;top:0;right:0;margin:auto;position:absolute}
.km-loading-text { 
    padding:10px;
    font-size:18px;
}
.km-modal-content {
   display: flex;
   flex-direction: row;
   justify-content: space-between;
   margin-top: 5%;
   vertical-align: middle;
   align-items: center;
}
.link {
 	 color:blue; 
}
.link:hover {
  	color:#293e40;
  	font-size:15px;
}


</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>sct-tree</id>
        <internal>false</internal>
        <link/>
        <name>SCTTree</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[// (function() {
//   /* populate the 'data' object */
//   /* e.g., data.table = $sp.getValue('table'); */
	
// 	data.dataJson = new BaseTableSearchAjax().sctSearch('SCT_SI_4.method1')
	
// })();

(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
if(input && input.searchStr){
	//gs.addInfoMessage('started searching '+input.searchStr);
	var x = new BaseTableSearchAjax();
	var searchArray = [];
	var searchInp = input.searchStr;
		
	data.dataJson = x.sctSearch(searchInp);
	data.callStack = x.stackJson(searchInp);
	
	//gs.addInfoMessage(JSON.stringify(resultJson));
		//return JSON.stringify(resultJson);
}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>ritwik</sys_created_by>
        <sys_created_on>2018-10-17 14:17:03</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>73202708db556300c3ab36cb7c96190b</sys_id>
        <sys_mod_count>125</sys_mod_count>
        <sys_name>SCTTree</sys_name>
        <sys_package display_value="super search" source="x_snc_super_search">4863b5fddbc52740ba189ea3db961925</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="super search">4863b5fddbc52740ba189ea3db961925</sys_scope>
        <sys_update_name>sp_widget_73202708db556300c3ab36cb7c96190b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-11-29 07:34:26</sys_updated_on>
        <template><![CDATA[<div class="container">
  <h1 class="center">Super Search ( Code Call Stack )</h1>
  <div class="input-group">
  <input type="text" class="form-control search-box" ng-model="c.searchStr" placeholder="ScriptName.MethodName" aria-describedby="basic-addon2">
  <span class="input-group-addon search-button " id="basic-addon2" ng-click="c.search()">Search Stacks</span>
    
</div>
  <label class="control-label col-sm-12 left" >e.g.: To search "findArticle" method in "KnowledgeHelp" script include, enter "KnowledgeHelp.findArticle"</label>
  
  
   <!-- <div class="form-group">
      <div class="col-sm-12">
        <input type="text" class="form-control" ng-model="c.searchStr">
      	<label class="control-label col-sm-12 left" >e.g.: To search "findArticle" method in "KnowledgeHelp" script include, enter "KnowledgeHelp.findArticle"</label>
      </div>
    </div>

    <div class="form-group">        
      <div class="col-sm-12 center">
        <button type="submit" class="btn btn-default" ng-click="c.search()" onkeypress="c.search(event)">Search</button>
      </div>
    </div>  -->
</div>
<br>



<script type="text/ng-template" id="nodes_renderer.html">
  <div ui-tree-handle class="tree-node tree-node-content">
    <a class="indicator" ng-if="node.nodes && node.nodes.length > 0" data-nodrag ng-click="toggle(this)"><span
        class="glyphicon"
        ng-class="{
          'glyphicon-chevron-right': collapsed,
          'glyphicon-chevron-down': !collapsed
        }"></span></a>
     <span class="link" ng-click="showRecord(node)"> {{node.title}} </span>
  </div>
  <ol ui-tree-nodes="" ng-model="node.nodes" ng-class="{hidden: collapsed}">
    <li ng-repeat="node in node.nodes" ui-tree-node ng-include="'nodes_renderer.html'">
    </li>
  </ol>
</script>



<div class="flex-container">
  
  <div class="callStack" >
    	<div class="row">
  <div class="col-sm-6">
    <div ui-tree data-drag-enabled="false" id="tree-root">
      <ol ui-tree-nodes ng-model="c.stackJson.nodes">
        <li ng-repeat="node in c.stackJson.nodes" ui-tree-node ng-include="'nodes_renderer.html'"></li>
      </ol>
    </div>
  </div>
</div>
  </div>
  
  <div class="fow-tree">
     <div id="myDiagramDiv" ng-show="c.noData=='loaded'"  style="border: solid 1px black; width: 100%; height: 500px;padding: 10px;"></div>
			<div id="noData" ng-show="c.noData=='noData'" style="border: solid 1px black; width: 100%;text-align: center;padding: 10px;">The method/script inlcude <b>{{c.searchStr}}</b> not called anywhere</div>
  </div>
  
</div>




]]></template>
    </sp_widget>
</record_update>
